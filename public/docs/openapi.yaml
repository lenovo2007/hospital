openapi: 3.0.3
info:
  title: Almacen Principal
  description: |
    API para gestión de usuarios con autenticación por tokens (Laravel Sanctum).
    Respuestas JSON unificadas `{status, mensaje, data}`.
    Importante: todos los resultados (éxito y error) devuelven HTTP 200. Los errores se indican con `status=false` y un `mensaje` descriptivo.
    Nota: cuando un listado no tiene resultados o un recurso no existe, la API responde HTTP 200 con `status=true`, `data` vacío o `null` según aplique y `mensaje` "<modelo> no encontrado" (por ejemplo: "hospitales no encontrado").
  version: 1.0.0
servers:
  - url: https://almacen.alwaysdata.net
    description: Producción (AlwaysData)
  - url: http://localhost
    description: Desarrollo local
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    StandardResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        mensaje:
          type: string
          example: Operación exitosa.
        autenticacion:
          type: integer
          description: 0=autenticado/válido, 1=token inválido/ausente, 2=token expirado
          enum: [0, 1, 2]
          example: 0
        data:
          nullable: true
    ErrorResponse:
      type: object
      properties:
        status:
          type: boolean
          example: false
        mensaje:
          type: string
          example: No autenticado. Token inválido o ausente.
        autenticacion:
          type: integer
          description: 0=autenticado/válido, 1=token inválido/ausente, 2=token expirado
          enum: [0, 1, 2]
          example: 1
        data:
          nullable: true
          example: null
    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
              example:
                email: ["El campo email es obligatorio."]
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        tipo:
          type: string
          example: natural
        rol:
          type: string
          example: admin
        nombre:
          type: string
          example: Ana
        apellido:
          type: string
          example: García
        cedula:
          type: string
          example: V-12345678
        telefono:
          type: string
          nullable: true
          example: 04140000000
        direccion:
          type: string
          nullable: true
          example: Caracas
        hospital_id:
          type: integer
          nullable: true
          example: 2
        sede_id:
          type: integer
          nullable: true
          example: 5
        can_view:
          type: boolean
          example: true
        can_create:
          type: boolean
          example: true
        can_update:
          type: boolean
          example: true
        can_delete:
          type: boolean
          example: true
        email:
          type: string
          format: email
          example: ana@example.com
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Hospital:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: Hospital Central
        rif:
          type: string
          example: J-12345678-9
        email:
          type: string
          format: email
          nullable: true
          example: contacto@hospital.test
        telefono:
          type: string
          nullable: true
          example: 04141234567
        ubicacion:
          type: object
          nullable: true
          properties:
            lat:
              type: number
              format: double
              example: 10.4910000
            lng:
              type: number
              format: double
              example: -66.9030000
        direccion:
          type: string
          nullable: true
          example: Caracas
        tipo:
          type: string
          example: publico
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          example: ana@example.com
        password:
          type: string
          example: password
      example:
        email: doctor@example.com
        password: password
    LoginResponseData:
      type: object
      properties:
        token:
          type: string
          example: 1|aVeryLongTokenString
        user:
          $ref: '#/components/schemas/User'
    PaginatedUsers:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        current_page:
          type: integer
        last_page:
          type: integer
        per_page:
          type: integer
        total:
          type: integer
    PaginatedHospitals:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Hospital'
        current_page:
          type: integer
        last_page:
          type: integer
        per_page:
          type: integer
        total:
          type: integer
    Sede:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: Almacén Principal
        tipo:
          type: string
          example: almacen_principal
        hospital_id:
          type: integer
          nullable: true
          example: 2
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PaginatedSedes:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Sede'
        current_page:
          type: integer
        last_page:
          type: integer
        per_page:
          type: integer
        total:
          type: integer
    Farmacia:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: Farmacia Principal
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PaginatedFarmacias:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Farmacia'
        current_page:
          type: integer
        last_page:
          type: integer
        per_page:
          type: integer
        total:
          type: integer
    MiniAlmacen:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: Mini Almacén 1
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PaginatedMiniAlmacenes:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MiniAlmacen'
        current_page:
          type: integer
        last_page:
          type: integer
        per_page:
          type: integer
        total:
          type: integer
    AlmacenPrincipalSchema:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: Almacén Principal A
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PaginatedAlmacenesPrincipales:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AlmacenPrincipalSchema'
        current_page:
          type: integer
        last_page:
          type: integer
        per_page:
          type: integer
        total:
          type: integer
    AlmacenCentralSchema:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: Almacén Central A
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PaginatedAlmacenesCentrales:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AlmacenCentralSchema'
        current_page:
          type: integer
        last_page:
          type: integer
        per_page:
          type: integer
        total:
          type: integer
security:
  - bearerAuth: []
paths:
  /api/login:
    post:
      summary: Login y emisión de token
      tags: [Autenticación]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            examples:
              admin:
                summary: Administrador
                value:
                  email: admin@example.com
                  password: password
              cliente:
                summary: Cliente
                value:
                  email: doctor@example.com
                  password: password
      responses:
        '200':
          description: Login exitoso o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/LoginResponseData'
              examples:
                admin:
                  summary: Respuesta exitosa (admin)
                  value:
                    status: true
                    mensaje: Login exitoso.
                    data:
                      token: "<TOKEN>"
                      user:
                        id: 1
                        email: admin@example.com
                        nombre: Admin
                        apellido: Principal
                cliente:
                  summary: Respuesta exitosa (cliente)
                  value:
                    status: true
                    mensaje: Login exitoso.
                    data:
                      token: "<TOKEN>"
                      user:
                        id: 2
                        email: doctor@example.com
                        nombre: Doctor
                        apellido: Ejemplo
  /api/logout:
    post:
      summary: Cerrar sesión (revocar token)
      tags: [Autenticación]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sesión cerrada o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/farmacias:
    get:
      summary: Listar farmacias
      tags: [Farmacias]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de farmacias o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedFarmacias'
    post:
      summary: Crear farmacia
      tags: [Farmacias]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farmacia'
      responses:
        '200':
          description: Farmacia creada o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
  /api/farmacias/{id}:
    get:
      summary: Ver detalle de farmacia
      tags: [Farmacias]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalle de farmacia o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Farmacia'
    put:
      summary: Actualizar farmacia
      tags: [Farmacias]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farmacia'
      responses:
        '200':
          description: Farmacia actualizada o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
    delete:
      summary: Eliminar farmacia
      tags: [Farmacias]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Farmacia eliminada o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/mini_almacenes:
    get:
      summary: Listar mini almacenes
      tags: [MiniAlmacenes]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de mini almacenes o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedMiniAlmacenes'
    post:
      summary: Crear mini almacén
      tags: [MiniAlmacenes]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MiniAlmacen'
      responses:
        '200':
          description: Mini almacén creado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
  /api/mini_almacenes/{id}:
    get:
      summary: Ver detalle de mini almacén
      tags: [MiniAlmacenes]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalle de mini almacén o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/MiniAlmacen'
    put:
      summary: Actualizar mini almacén
      tags: [MiniAlmacenes]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MiniAlmacen'
      responses:
        '200':
          description: Mini almacén actualizado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
    delete:
      summary: Eliminar mini almacén
      tags: [MiniAlmacenes]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Mini almacén eliminado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/almacenes_principales:
    get:
      summary: Listar almacenes principales
      tags: [AlmacenesPrincipales]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedAlmacenesPrincipales'
    post:
      summary: Crear almacén principal
      tags: [AlmacenesPrincipales]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenPrincipalSchema'
      responses:
        '200':
          description: Creado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
  /api/almacenes_principales/{id}:
    get:
      summary: Ver detalle de almacén principal
      tags: [AlmacenesPrincipales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalle o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AlmacenPrincipalSchema'
    put:
      summary: Actualizar almacén principal
      tags: [AlmacenesPrincipales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenPrincipalSchema'
      responses:
        '200':
          description: Actualizado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
    delete:
      summary: Eliminar almacén principal
      tags: [AlmacenesPrincipales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Eliminado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/almacenes_centrales:
    get:
      summary: Listar almacenes centrales
      tags: [AlmacenesCentrales]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedAlmacenesCentrales'
    post:
      summary: Crear almacén central
      tags: [AlmacenesCentrales]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenCentralSchema'
      responses:
        '200':
          description: Creado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
  /api/almacenes_centrales/{id}:
    get:
      summary: Ver detalle de almacén central
      tags: [AlmacenesCentrales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalle o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AlmacenCentralSchema'
    put:
      summary: Actualizar almacén central
      tags: [AlmacenesCentrales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenCentralSchema'
      responses:
        '200':
          description: Actualizado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
    delete:
      summary: Eliminar almacén central
      tags: [AlmacenesCentrales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Eliminado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/sedes:
    get:
      summary: Listar sedes
      tags: [Sedes]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de sedes o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedSedes'
    post:
      summary: Crear sede
      tags: [Sedes]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sede'
      responses:
        '200':
          description: Sede creada o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
  /api/sedes/{id}:
    get:
      summary: Ver detalle de sede
      tags: [Sedes]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalle de sede o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Sede'
    put:
      summary: Actualizar sede
      tags: [Sedes]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sede'
      responses:
        '200':
          description: Sede actualizada o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
    delete:
      summary: Eliminar sede
      tags: [Sedes]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Sede eliminada o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
  /api/me:
    get:
      summary: Información del usuario autenticado
      tags: [Autenticación]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/User'
  /api/users:
    get:
      summary: Listar usuarios
      tags: [Usuarios]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado paginado de usuarios o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedUsers'
    post:
      summary: Crear usuario
      tags: [Usuarios]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario creado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
  /api/users/{id}:
    get:
      summary: Ver detalle de usuario
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalle o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/User'
    put:
      summary: Actualizar usuario
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Actualizado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
    delete:
      summary: Eliminar usuario
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Eliminado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/hospitales:
    get:
      summary: Listar hospitales
      tags: [Hospitales]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de hospitales o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedHospitals'
    post:
      summary: Crear hospital
      tags: [Hospitales]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hospital'
      responses:
        '200':
          description: Hospital creado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
  /api/hospitales/buscar_por_rif:
    get:
      summary: Buscar hospital por RIF
      tags: [Hospitales]
      security:
        - bearerAuth: []
      parameters:
        - name: rif
          in: query
          required: true
          schema:
            type: string
          example: J-12345678-9
      responses:
        '200':
          description: Resultado de búsqueda por RIF o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Hospital'
  /api/hospitales/{id}:
    get:
      summary: Ver detalle de hospital
      tags: [Hospitales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalle de hospital o error con `status=false`
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Hospital'
    put:
      summary: Actualizar hospital
      tags: [Hospitales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hospital'
      responses:
        '200':
          description: Hospital actualizado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
    delete:
      summary: Eliminar hospital
      tags: [Hospitales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Hospital eliminado o error con `status=false`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
