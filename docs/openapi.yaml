openapi: 3.0.3
info:
  title: Almacen Principal
  description: |
    API para gesti√≥n de usuarios con autenticaci√≥n por tokens (Laravel Sanctum).
    Respuestas JSON unificadas `{status, mensaje, data}`.
    Importante: todos los resultados (√©xito y error) devuelven HTTP 200. Los errores se indican con `status=false` y un `mensaje` descriptivo.
    Nota: cuando un listado no tiene resultados o un recurso no existe, la API responde HTTP 200 con `status=true`, `data` vac√≠o o `null` seg√∫n aplique y `mensaje` "<modelo> no encontrado" (por ejemplo: "hospitales no encontrado").
  version: 1.0.0
servers:
  - url: https://almacen.alwaysdata.net
    description: Producci√≥n (AlwaysData)
  - url: http://localhost
    description: Desarrollo local
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    StandardResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        mensaje:
          type: string
          example: Operaci√≥n exitosa.
        autenticacion:
          type: integer
          description: 0=autenticado/v√°lido, 1=token inv√°lido/ausente, 2=token expirado
          enum: [0, 1, 2]
          example: 0
        data:
          nullable: true
    ErrorResponse:
      type: object
      properties:
        status:
          type: boolean
          example: false
        mensaje:
          type: string
          example: No autenticado. Token inv√°lido o ausente.
        autenticacion:
          type: integer
          description: 0=autenticado/v√°lido, 1=token inv√°lido/ausente, 2=token expirado
          enum: [0, 1, 2]
          example: 1
        data:
          nullable: true
          example: null
    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
              example:
                email: ["El campo email es obligatorio."]
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        tipo:
          type: string
          example: natural
        rol:
          type: string
          example: admin
        nombre:
          type: string
          example: Ana
        apellido:
          type: string
          example: Garc√≠a
        genero:
          type: string
          nullable: true
          example: femenino
        cedula:
          type: string
          example: V-12345678
        telefono:
          type: string
          nullable: true
          example: 04140000000
  /api/lote-grupo:
    get:
    get:
      summary: Listar grupos de lote
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      parameters:
        - name: codigo
          in: query
          required: false
          schema: { type: string }
          description: Filtrar por cÛdigo de grupo
        - name: lote_id
          in: query
          required: false
          schema: { type: integer }
          description: Filtrar por ID de lote
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [activo, inactivo]
          description: Filtrar por estado
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
            enum: [codigo, cantidad, status, created_at]
          description: Campo por el cual ordenar
        - name: sort_direction
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
          description: DirecciÛn del ordenamiento
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 15
          description: N˙mero de elementos por p·gina
      responses:
        '200':
          description: Lista de grupos de lote
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedLoteGrupos'
    post:
      summary: Crear grupo de lote
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoteGrupoRequest'
      responses:
        '201':
          description: Grupo de lote creado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/LoteGrupo'

  /api/lote-grupo/crear-desde-movimiento:
    post:
      summary: Crear grupo de lote desde items de movimiento
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoteGrupoMovimientoRequest'
      responses:
        '201':
          description: Grupo de lote creado desde movimiento
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          codigo: { type: string }
                          items: { type: array, items: { $ref: '#/components/schemas/LoteGrupo' } }
                          total_items: { type: integer }

  /api/lote-grupo/{codigo}:
    get:
      summary: Ver detalle de grupo de lote por cÛdigo
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      parameters:
        - name: codigo
          in: path
          required: true
          schema: { type: string }
          description: CÛdigo del grupo de lote
      responses:
        '200':
          description: Detalle del grupo de lote
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          codigo: { type: string }
                          items: { type: array, items: { $ref: '#/components/schemas/LoteGrupo' } }
                          total_items: { type: integer }
                          cantidad_total: { type: integer }

  /api/lote-grupo/{id}:
    put:
      summary: Actualizar grupo de lote
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
          description: ID del grupo de lote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cantidad: { type: integer, minimum: 1 }
                status: { type: string, enum: [activo, inactivo] }
      responses:
        '200':
          description: Grupo de lote actualizado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/LoteGrupo'
    delete:
      summary: Eliminar grupo de lote (cambiar estado a inactivo)
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
          description: ID del grupo de lote
      responses:
        '200':
          description: Grupo de lote eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/lote-grupo/estadisticas:
    get:
      summary: Obtener estadÌsticas de grupos de lote
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [activo, inactivo]
          description: Filtrar por estado
      responses:
        '200':
          description: EstadÌsticas de grupos de lote
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          total_grupos: { type: integer }
                          total_items: { type: integer }
                          cantidad_total: { type: integer }
                          grupos_activos: { type: integer }
                          grupos_inactivos: { type: integer }
