openapi: 3.1.0
info:
  title: Almacen Principal
  description: |
    API para gestión de usuarios con autenticación por tokens (Laravel Sanctum).
    Respuestas JSON unificadas `{status, mensaje, data}`.
  version: 1.0.0
servers:
  - url: http://localhost
    description: Desarrollo local
  - url: https://almacen.alwaysdata.net
    description: Producción

security:
  - bearerAuth: []

paths:
  # ========================================
  # AUTENTICACIÓN
  # ========================================
  /api/login:
    post:
      summary: Iniciar sesión
      tags: [Autenticación]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, format: email }
                password: { type: string, format: password }
      responses:
        '200':
          description: Sesión iniciada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/logout:
    post:
      summary: Cerrar sesión
      tags: [Autenticación]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sesión cerrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/me:
    get:
      summary: Información del usuario autenticado
      tags: [Autenticación]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Datos del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/users/password/forgot:
    post:
      summary: Solicitar restablecimiento de contraseña
      tags: [Autenticación]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, format: email }
      responses:
        '200':
          description: Token de restablecimiento enviado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/users/password/reset:
    post:
      summary: Restablecer contraseña con token
      tags: [Autenticación]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token: { type: string }
                password: { type: string, format: password }
                password_confirmation: { type: string, format: password }
      responses:
        '200':
          description: Contraseña restablecida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # USUARIOS
  # ========================================
  /api/users:
    get:
      summary: Listar usuarios
      tags: [Usuarios]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de usuarios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear usuario
      tags: [Usuarios]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: Usuario creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/users/{id}:
    get:
      summary: Ver detalle de usuario
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar usuario
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar usuario
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Usuario eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/users/email/{email}:
    get:
      summary: Ver usuario por email
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: path
          required: true
          schema: { type: string, format: email }
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar usuario por email
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: path
          required: true
          schema: { type: string, format: email }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/users/email/{email}/password:
    put:
      summary: Cambiar contraseña por email
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: path
          required: true
          schema: { type: string, format: email }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password: { type: string, format: password }
      responses:
        '200':
          description: Contraseña actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/users/cedula/{cedula}:
    get:
      summary: Ver usuario por cédula
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: cedula
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar usuario por cédula
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: cedula
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/users/cedula/{cedula}/password:
    put:
      summary: Cambiar contraseña por cédula
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - name: cedula
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password: { type: string, format: password }
      responses:
        '200':
          description: Contraseña actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # HOSPITALES
  # ========================================
  /api/hospitales:
    get:
      summary: Listar hospitales
      tags: [Hospitales]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de hospitales
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear hospital
      tags: [Hospitales]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HospitalRequest'
      responses:
        '201':
          description: Hospital creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/hospitales/{id}:
    get:
      summary: Ver detalle de hospital
      tags: [Hospitales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle del hospital
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar hospital
      tags: [Hospitales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HospitalRequest'
      responses:
        '200':
          description: Hospital actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar hospital
      tags: [Hospitales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Hospital eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/hospitales/rif/{rif}:
    get:
      summary: Ver hospital por RIF
      tags: [Hospitales]
      security:
        - bearerAuth: []
      parameters:
        - name: rif
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Hospital encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar hospital por RIF
      tags: [Hospitales]
      security:
        - bearerAuth: []
      parameters:
        - name: rif
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HospitalRequest'
      responses:
        '200':
          description: Hospital actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/hospitales/buscar_por_rif:
    get:
      summary: Buscar hospital por RIF
      tags: [Hospitales]
      security:
        - bearerAuth: []
      parameters:
        - name: rif
          in: query
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Hospital encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # SEDES
  # ========================================
  /api/sedes:
    get:
      summary: Listar sedes
      tags: [Sedes]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de sedes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear sede
      tags: [Sedes]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SedeRequest'
      responses:
        '201':
          description: Sede creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/sedes/{id}:
    get:
      summary: Ver detalle de sede
      tags: [Sedes]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle de la sede
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar sede
      tags: [Sedes]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SedeRequest'
      responses:
        '200':
          description: Sede actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar sede
      tags: [Sedes]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Sede eliminada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/sedes/hospital/{id}:
    get:
      summary: Listar sedes por hospital
      tags: [Sedes]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Sedes del hospital
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # ALMACENES PRINCIPALES
  # ========================================
  /api/almacenes_principales:
    get:
      summary: Listar almacenes principales
      tags: [Almacenes Principales]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de almacenes principales
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear almacén principal
      tags: [Almacenes Principales]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenPrincipalRequest'
      responses:
        '201':
          description: Almacén principal creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/almacenes_principales/{id}:
    get:
      summary: Ver detalle de almacén principal
      tags: [Almacenes Principales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle del almacén principal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar almacén principal
      tags: [Almacenes Principales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenPrincipalRequest'
      responses:
        '200':
          description: Almacén principal actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar almacén principal
      tags: [Almacenes Principales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Almacén principal eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # ALMACENES CENTRALES
  # ========================================
  /api/almacenes_centrales:
    get:
      summary: Listar almacenes centrales
      tags: [Almacenes Centrales]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de almacenes centrales
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear almacén central
      tags: [Almacenes Centrales]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenCentralRequest'
      responses:
        '201':
          description: Almacén central creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/almacenes_centrales/{id}:
    get:
      summary: Ver detalle de almacén central
      tags: [Almacenes Centrales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle del almacén central
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar almacén central
      tags: [Almacenes Centrales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenCentralRequest'
      responses:
        '200':
          description: Almacén central actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar almacén central
      tags: [Almacenes Centrales]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Almacén central eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # ALMACENES DE FARMACIA
  # ========================================
  /api/almacenes_farmacia:
    get:
      summary: Listar almacenes de farmacia
      tags: [Almacenes Farmacia]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de almacenes de farmacia
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear almacén de farmacia
      tags: [Almacenes Farmacia]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenFarmaciaRequest'
      responses:
        '201':
          description: Almacén de farmacia creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/almacenes_farmacia/{id}:
    get:
      summary: Ver detalle de almacén de farmacia
      tags: [Almacenes Farmacia]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle del almacén de farmacia
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar almacén de farmacia
      tags: [Almacenes Farmacia]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenFarmaciaRequest'
      responses:
        '200':
          description: Almacén de farmacia actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar almacén de farmacia
      tags: [Almacenes Farmacia]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Almacén de farmacia eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # ALMACENES PARALELOS
  # ========================================
  /api/almacenes_paralelo:
    get:
      summary: Listar almacenes paralelos
      tags: [Almacenes Paralelos]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de almacenes paralelos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear almacén paralelo
      tags: [Almacenes Paralelos]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenParaleloRequest'
      responses:
        '201':
          description: Almacén paralelo creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/almacenes_paralelo/{id}:
    get:
      summary: Ver detalle de almacén paralelo
      tags: [Almacenes Paralelos]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle del almacén paralelo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar almacén paralelo
      tags: [Almacenes Paralelos]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenParaleloRequest'
      responses:
        '200':
          description: Almacén paralelo actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar almacén paralelo
      tags: [Almacenes Paralelos]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Almacén paralelo eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # ALMACENES SERVICIOS ATENCIONES
  # ========================================
  /api/almacenes_servicios_atenciones:
    get:
      summary: Listar almacenes de servicios de atenciones
      tags: [Almacenes Servicios Atenciones]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de almacenes de servicios de atenciones
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear almacén de servicios de atenciones
      tags: [Almacenes Servicios Atenciones]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenServiciosAtencionesRequest'
      responses:
        '201':
          description: Almacén de servicios de atenciones creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/almacenes_servicios_atenciones/{id}:
    get:
      summary: Ver detalle de almacén de servicios de atenciones
      tags: [Almacenes Servicios Atenciones]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle del almacén de servicios de atenciones
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar almacén de servicios de atenciones
      tags: [Almacenes Servicios Atenciones]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenServiciosAtencionesRequest'
      responses:
        '200':
          description: Almacén de servicios de atenciones actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar almacén de servicios de atenciones
      tags: [Almacenes Servicios Atenciones]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Almacén de servicios de atenciones eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # ALMACENES SERVICIOS APOYO
  # ========================================
  /api/almacenes_servicios_apoyo:
    get:
      summary: Listar almacenes de servicios de apoyo
      tags: [Almacenes Servicios Apoyo]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de almacenes de servicios de apoyo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear almacén de servicios de apoyo
      tags: [Almacenes Servicios Apoyo]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenServiciosApoyoRequest'
      responses:
        '201':
          description: Almacén de servicios de apoyo creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/almacenes_servicios_apoyo/{id}:
    get:
      summary: Ver detalle de almacén de servicios de apoyo
      tags: [Almacenes Servicios Apoyo]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle del almacén de servicios de apoyo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar almacén de servicios de apoyo
      tags: [Almacenes Servicios Apoyo]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmacenServiciosApoyoRequest'
      responses:
        '200':
          description: Almacén de servicios de apoyo actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar almacén de servicios de apoyo
      tags: [Almacenes Servicios Apoyo]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Almacén de servicios de apoyo eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # INSUMOS
  # ========================================
  /api/insumos:
    get:
      summary: Listar insumos
      tags: [Insumos]
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [activo, inactivo, todos]
            default: activo
      responses:
        '200':
          description: Listado de insumos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear insumo
      tags: [Insumos]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsumoRequest'
      responses:
        '201':
          description: Insumo creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/insumos/{id}:
    get:
      summary: Ver detalle de insumo
      tags: [Insumos]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle del insumo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar insumo
      tags: [Insumos]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsumoRequest'
      responses:
        '200':
          description: Insumo actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar insumo
      tags: [Insumos]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Insumo eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/insumos/codigo/{codigo}:
    get:
      summary: Ver insumo por código
      tags: [Insumos]
      security:
        - bearerAuth: []
      parameters:
        - name: codigo
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Insumo encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar insumo por código
      tags: [Insumos]
      security:
        - bearerAuth: []
      parameters:
        - name: codigo
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsumoRequest'
      responses:
        '200':
          description: Insumo actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/insumos/sede/{sede_id}:
    get:
      summary: Listar insumos por sede
      tags: [Insumos]
      security:
        - bearerAuth: []
      parameters:
        - name: sede_id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Insumos de la sede
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/insumos/import:
    post:
      summary: Importar insumos desde archivo Excel
      tags: [Insumos]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [file]
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Importación procesada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # LOTES
  # ========================================
  /api/lotes:
    get:
      summary: Listar lotes
      tags: [Lotes]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de lotes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear lote
      tags: [Lotes]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoteRequest'
      responses:
        '201':
          description: Lote creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/lotes/{lote}:
    get:
      summary: Ver detalle de lote
      tags: [Lotes]
      security:
        - bearerAuth: []
      parameters:
        - name: lote
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle del lote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar lote
      tags: [Lotes]
      security:
        - bearerAuth: []
      parameters:
        - name: lote
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoteRequest'
      responses:
        '200':
          description: Lote actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar lote
      tags: [Lotes]
      security:
        - bearerAuth: []
      parameters:
        - name: lote
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Lote eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/lotes/{lote}/almacenes:
    get:
      summary: Ver almacenes de un lote
      tags: [Lotes]
      security:
        - bearerAuth: []
      parameters:
        - name: lote
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Almacenes del lote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Agregar lote a almacén
      tags: [Lotes]
      security:
        - bearerAuth: []
      parameters:
        - name: lote
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                almacen_id: { type: integer }
                cantidad: { type: integer }
      responses:
        '201':
          description: Lote agregado al almacén
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/lotes/{lote}/almacenes/{almacen_id}:
    delete:
      summary: Eliminar lote de almacén específico
      tags: [Lotes]
      security:
        - bearerAuth: []
      parameters:
        - name: lote
          in: path
          required: true
          schema: { type: integer }
        - name: almacen_id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Lote eliminado del almacén
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # LOTE-GRUPO
  # ========================================
  /api/lote-grupo:
    get:
      summary: Listar grupos de lote
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      parameters:
        - name: codigo
          in: query
          required: false
          schema: { type: string }
        - name: lote_id
          in: query
          required: false
          schema: { type: integer }
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [activo, inactivo]
      responses:
        '200':
          description: Lista de grupos de lote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear grupo de lote
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoteGrupoRequest'
      responses:
        '201':
          description: Grupo de lote creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/lote-grupo/{id}:
    put:
      summary: Actualizar grupo de lote
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cantidad: { type: integer, minimum: 1 }
                status: { type: string, enum: [activo, inactivo] }
      responses:
        '200':
          description: Grupo de lote actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar grupo de lote
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Grupo de lote eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/lote-grupo/{codigo}:
    get:
      summary: Ver detalle de grupo de lote por código
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      parameters:
        - name: codigo
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Detalle del grupo de lote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/lote-grupo/crear-desde-movimiento:
    post:
      summary: Crear grupo de lote desde movimiento
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoteGrupoMovimientoRequest'
      responses:
        '201':
          description: Grupo de lote creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/lote-grupo/estadisticas:
    get:
      summary: Obtener estadísticas de grupos de lote
      tags: [LoteGrupo]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Estadísticas de grupos de lote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # MOVIMIENTOS DE STOCK
  # ========================================
  /api/movimientos-stock:
    get:
      summary: Listar movimientos de stock
      tags: [Movimientos Stock]
      security:
        - bearerAuth: []
      parameters:
        - name: per_page
          in: query
          schema: { type: integer, minimum: 1, maximum: 100, default: 50 }
        - name: estado
          in: query
          schema: { type: string, enum: [pendiente, completado, inconsistente, cancelado] }
        - name: destino_hospital_id
          in: query
          schema: { type: integer }
        - name: destino_sede_id
          in: query
          schema: { type: integer }
        - name: origen_hospital_id
          in: query
          schema: { type: integer }
        - name: origen_sede_id
          in: query
          schema: { type: integer }
        - name: codigo_grupo
          in: query
          schema: { type: string }
      responses:
        '200':
          description: Listado de movimientos de stock
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear movimiento de stock
      tags: [Movimientos Stock]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovimientoStockRequest'
      responses:
        '201':
          description: Movimiento de stock creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/movimientos-stock/{id}:
    get:
      summary: Ver detalle de movimiento de stock
      tags: [Movimientos Stock]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle del movimiento de stock
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    put:
      summary: Actualizar movimiento de stock
      tags: [Movimientos Stock]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovimientoStockRequest'
      responses:
        '200':
          description: Movimiento de stock actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    delete:
      summary: Eliminar movimiento de stock
      tags: [Movimientos Stock]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Movimiento de stock eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/movimientos-stock/destino_sede/{destino_sede_id}:
    get:
      summary: Listar movimientos de stock por sede destino
      tags: [Movimientos Stock]
      security:
        - bearerAuth: []
      parameters:
        - name: destino_sede_id
          in: path
          required: true
          schema: { type: integer }
        - name: per_page
          in: query
          schema: { type: integer, minimum: 1, maximum: 100, default: 50 }
        - name: estado
          in: query
          schema: { type: string, enum: [pendiente, completado, inconsistente, cancelado] }
        - name: destino_hospital_id
          in: query
          schema: { type: integer }
      responses:
        '200':
          description: Movimientos de stock por sede destino
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/movimientos-stock/origen_sede/{origen_sede_id}:
    get:
      summary: Listar movimientos de stock por sede origen
      tags: [Movimientos Stock]
      security:
        - bearerAuth: []
      parameters:
        - name: origen_sede_id
          in: path
          required: true
          schema: { type: integer }
        - name: per_page
          in: query
          schema: { type: integer, minimum: 1, maximum: 100, default: 50 }
        - name: estado
          in: query
          schema: { type: string, enum: [pendiente, completado, inconsistente, cancelado] }
        - name: origen_hospital_id
          in: query
          schema: { type: integer }
      responses:
        '200':
          description: Movimientos de stock por sede origen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # MOVIMIENTOS Y DISTRIBUCIÓN
  # ========================================
  /api/movimiento/central:
    post:
      summary: Crear movimiento desde almacén central
      tags: [Movimientos]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovimientoCentralRequest'
      responses:
        '200':
          description: Movimiento creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/movimiento/central/salida:
    post:
      summary: Registrar salida desde almacén central
      tags: [Movimientos]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovimientoCentralSalidaRequest'
      responses:
        '200':
          description: Resultado del movimiento de salida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/distribucion/principal:
    post:
      summary: Distribución hacia almacén principal
      tags: [Distribución]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistribucionPrincipalRequest'
      responses:
        '200':
          description: Distribución aplicada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/distribucion/automatica/central:
    post:
      summary: Distribución automática desde central
      tags: [Distribución]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistribucionAutomaticaRequest'
      responses:
        '200':
          description: Distribución automática aplicada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # INVENTARIO
  # ========================================
  /api/inventario/registrar:
    post:
      summary: Registrar inventario
      tags: [Inventario]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                almacen_id: { type: integer }
                items: { type: array }
      responses:
        '200':
          description: Inventario registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/inventario/sede/{sede_id}:
    get:
      summary: Obtener inventario por sede
      description: Devuelve los insumos agrupados por insumo_id desde la tabla almacenCentral, filtrando por sede_id y status=true
      tags: [Inventario]
      security:
        - bearerAuth: []
      parameters:
        - name: sede_id
          in: path
          required: true
          schema:
            type: integer
          description: ID de la sede
      responses:
        '200':
          description: Listado de inventario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # SOLICITUDES FALTANTES
  # ========================================
  /api/solicitudes_faltantes:
    get:
      summary: Listar solicitudes de faltantes
      tags: [SolicitudesFaltantes]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de solicitudes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear solicitud de faltante
      tags: [SolicitudesFaltantes]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [hospital_id, almacen_tipo, almacen_id, insumo_id]
              properties:
                hospital_id: { type: integer }
                almacen_tipo: { type: string }
                almacen_id: { type: integer }
                insumo_id: { type: integer }
      responses:
        '200':
          description: Solicitud creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/solicitudes_faltantes/{solicitud}:
    patch:
      summary: Actualizar solicitud de faltante
      tags: [SolicitudesFaltantes]
      security:
        - bearerAuth: []
      parameters:
        - name: solicitud
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [estado]
              properties:
                estado: { type: string, enum: [pendiente, atendida, cancelada] }
                comentario: { type: string, nullable: true }
      responses:
        '200':
          description: Solicitud actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # ========================================
  # TIPOS HOSPITAL DISTRIBUCIONES
  # ========================================
  /api/tipos_hospital_distribuciones:
    get:
      summary: Listar distribución de tipos de hospitales
      tags: [TiposHospitalDistribucion]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listado de distribuciones
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

    post:
      summary: Crear distribución de tipo de hospital
      tags: [TiposHospitalDistribucion]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [tipo, porcentaje]
              properties:
                tipo: { type: string }
                porcentaje: { type: number, format: float }
      responses:
        '200':
          description: Distribución creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/tipos_hospital_distribuciones/{id}:
    get:
      summary: Ver detalle de distribución
      tags: [TiposHospitalDistribucion]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalle de la distribución
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

# ========================================
# COMPONENTS
# ========================================
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    StandardResponse:
      type: object
      properties:
        status:
          type: boolean
          description: Indica si la operación fue exitosa
        mensaje:
          type: string
          description: Mensaje descriptivo del resultado
        data:
          type: object
          nullable: true
          description: Datos de la respuesta (opcional)

    ErrorResponse:
      type: object
      properties:
        status:
          type: boolean
          example: false
        mensaje:
          type: string
          example: "Error descriptivo"
        errors:
          type: object
          nullable: true
          example: {"campo": ["El campo es requerido"]}

    UserRequest:
      type: object
      properties:
        name: { type: string }
        email: { type: string, format: email }
        password: { type: string, format: password }

    HospitalRequest:
      type: object
      properties:
        nombre: { type: string }
        rif: { type: string }
        direccion: { type: string }
        telefono: { type: string }

    SedeRequest:
      type: object
      properties:
        nombre: { type: string }
        hospital_id: { type: integer }
        direccion: { type: string }
        telefono: { type: string }

    AlmacenPrincipalRequest:
      type: object
      properties:
        nombre: { type: string }
        sede_id: { type: integer }
        descripcion: { type: string }

    AlmacenCentralRequest:
      type: object
      properties:
        nombre: { type: string }
        sede_id: { type: integer }
        descripcion: { type: string }

    AlmacenFarmaciaRequest:
      type: object
      properties:
        nombre: { type: string }
        sede_id: { type: integer }
        descripcion: { type: string }

    AlmacenParaleloRequest:
      type: object
      properties:
        nombre: { type: string }
        sede_id: { type: integer }
        descripcion: { type: string }

    AlmacenServiciosAtencionesRequest:
      type: object
      properties:
        nombre: { type: string }
        sede_id: { type: integer }
        descripcion: { type: string }

    AlmacenServiciosApoyoRequest:
      type: object
      properties:
        nombre: { type: string }
        sede_id: { type: integer }
        descripcion: { type: string }

    InsumoRequest:
      type: object
      properties:
        codigo: { type: string }
        descripcion: { type: string }
        unidad_medida: { type: string }
        tipo: { type: string }

    LoteRequest:
      type: object
      properties:
        numero_lote: { type: string }
        fecha_vencimiento: { type: string, format: date }
        cantidad_inicial: { type: integer }

    LoteGrupoRequest:
      type: object
      properties:
        codigo: { type: string }
        items: { type: array }

    LoteGrupoMovimientoRequest:
      type: object
      properties:
        origen_central_id: { type: integer }
        hospital_id: { type: integer }
        principal_id: { type: integer }
        tipo_movimiento: { type: string }
        fecha_despacho: { type: string, format: date }
        items: { type: array }

    MovimientoCentralRequest:
      type: object
      properties:
        origen_central_id: { type: integer }
        hospital_id: { type: integer }
        principal_id: { type: integer }
        tipo_movimiento: { type: string }

    MovimientoCentralSalidaRequest:
      type: object
      required:
        - origen_almacen_id
        - origen_hospital_id
        - origen_sede_id
        - destino_hospital_id
        - destino_sede_id
        - destino_almacen_tipo
        - tipo_movimiento
        - fecha_despacho
        - items
      properties:
        origen_almacen_id:
          type: integer
          minimum: 1
        origen_hospital_id:
          type: integer
          minimum: 1
        origen_sede_id:
          type: integer
          minimum: 1
        destino_hospital_id:
          type: integer
          minimum: 1
        destino_sede_id:
          type: integer
          minimum: 1
        destino_almacen_tipo:
          type: string
          maxLength: 100
        tipo_movimiento:
          type: string
          maxLength: 50
        fecha_despacho:
          type: string
          format: date
        observaciones:
          type: string
          maxLength: 500
          nullable: true
        items:
          type: array
          minItems: 1
          items:
            type: object
            required: [lote_id, cantidad]
            properties:
              lote_id:
                type: integer
                minimum: 1
              cantidad:
                type: integer
                minimum: 1

    DistribucionPrincipalRequest:
      type: object
      properties:
        origen_central_id: { type: integer }
        destino_principal_id: { type: integer }
        items: { type: array }

    DistribucionAutomaticaRequest:
      type: object
      properties:
        lote_ids: { type: array, items: { type: integer } }
        estrategia: { type: string, enum: [porcentaje] }

    MovimientoStockRequest:
      type: object
      required:
        - tipo
        - tipo_movimiento
        - destino_hospital_id
        - destino_sede_id
        - origen_almacen_tipo
        - origen_almacen_id
        - destino_almacen_tipo
        - destino_almacen_id
        - cantidad
      properties:
        tipo:
          type: string
          maxLength: 50
        tipo_movimiento:
          type: string
          maxLength: 50
        origen_hospital_id:
          type: integer
          nullable: true
          minimum: 1
        origen_sede_id:
          type: integer
          nullable: true
          minimum: 1
        destino_hospital_id:
          type: integer
          minimum: 1
        destino_sede_id:
          type: integer
          minimum: 1
        origen_almacen_tipo:
          type: string
          maxLength: 100
        origen_almacen_id:
          type: integer
          minimum: 0
        destino_almacen_tipo:
          type: string
          maxLength: 100
        destino_almacen_id:
          type: integer
          minimum: 0
        cantidad:
          type: integer
          minimum: 0
        fecha_despacho:
          type: string
          format: date
        observaciones:
          type: string
          nullable: true
          maxLength: 500
        fecha_recepcion:
          type: string
          format: date
          nullable: true
        observaciones_recepcion:
          type: string
          nullable: true
          maxLength: 500
        estado:
          type: string
          enum: [pendiente, completado, inconsistente, cancelado]
        codigo_grupo:
          type: string
          nullable: true
          maxLength: 50
        user_id:
          type: integer
          minimum: 1
        user_id_receptor:
          type: integer
          nullable: true
          minimum: 1
